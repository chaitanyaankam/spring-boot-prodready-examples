-- DROP SEQUENCE AND TABLES
DROP TABLE IF EXISTS LAND_LANDOWNER;
DROP TABLE IF EXISTS LAND;
DROP TABLE IF EXISTS LAND_OWNER;
DROP SEQUENCE IF EXISTS LAND_SEQ;
DROP SEQUENCE IF EXISTS FARM_LAND_SEQ;

-- CREATE SEQUENCE AND TABLES
CREATE SEQUENCE LAND_SEQ
START WITH 1
INCREMENT BY 1;

CREATE TABLE LAND(
LAND_ID BIGINT DEFAULT LAND_SEQ.nextval PRIMARY KEY,
SURVEY_NO VARCHAR(100) NOT NULL,
AREA INT NOT NULL,
DESCRIPTION TEXT NOT NULL,
UNIT VARCHAR(10) NOT NULL DEFAULT 'acre',
ADDRESS_LINE1 VARCHAR(200) NOT NULL,
LAND_MARK VARCHAR(70) NOT NULL,
CITY VARCHAR(70) NOT NULL,
STATE VARCHAR(70) NOT NULL,
POSTAL_ZIP_CODE VARCHAR(10) NOT NULL,
NUMBER_OF_FARMS INT NOT NULL,
LATITUDE VARCHAR(10),
LONGITUDE VARCHAR(10));

-- CREATE SEQUENCE FOR FARM_LAND TABLE
CREATE SEQUENCE FARM_LAND_SEQ
START WITH 1
INCREMENT BY 1;

-- LAND_OWNER TABLE
CREATE TABLE LAND_OWNER(
OWNER_NATIONAL_IDENTIFIER VARCHAR(30) PRIMARY KEY,
ID_TYPE VARCHAR(10) NOT NULL,
FIRST_NAME VARCHAR(50) NOT NULL,
MIDDLE_NAME VARCHAR(50),
LAST_NAME VARCHAR(50),
MOBILE_NUMBER VARCHAR(15) NOT NULL,
ALT_MOBILE_NUMBER VARCHAR(15) NOT NULL,
EMAIL VARCHAR(50));

-- MANY-TO-MANY Mapping for LAND_LANDOWNER
CREATE TABLE LAND_LANDOWNER(
LAND_ID INT NOT NULL,
OWNER_ID VARCHAR(30) NOT NULL,
PRIMARY KEY (LAND_ID, OWNER_ID),
FOREIGN KEY (OWNER_ID) REFERENCES LAND_OWNER(OWNER_NATIONAL_IDENTIFIER),
FOREIGN KEY (LAND_ID) REFERENCES LAND(LAND_ID)
);

